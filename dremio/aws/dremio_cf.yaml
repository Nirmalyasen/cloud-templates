---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Setup a Dremio cluster.'
Parameters:
  keyName:
    Type: AWS::EC2::KeyPair::KeyName
    AllowedPattern: ".+"
    ConstraintDescription: must select an existing EC2 KeyPair
  clusterSize:
    Type: String
    Description: "The type and number of machines are chosen based on the size selected. For more details see <TBD>"
    AllowedValues: ["Small"]
    Default: Small
  dremioDownloadURL:
    Type: String
    Description: "Optional - if empty, the latest Dremio CE binaries are used. Must be http or https URL."
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Dremio Cluster
        Parameters:
          - coordinatorInstanceType
          - coordinatorCount
          - executorInstanceType
          - executorCount
          - clusterSize
          - dremioDownloadURL
      -
        Label:
          default: AWS resource configuration
        Parameters:
          - keyName
    ParameterLabels:
      keyName:
        default : "AWS keypair"
      clusterSize:
        default: "Cluster size"
      dremioDownloadURL:
        default: "Dremio download URL"
Mappings:
  Custom:
    Variables:
      URL: http://download.dremio.com/community-server/dremio-community-LATEST.noarch.rpm
  ClusterSize:
    Small:
      coordinatorInstanceType: m4.xlarge
      coordinatorCount: 0
      coordinatorDiskSize: 100
      executorInstanceType: m4.xlarge
      executorCount: 3
      executorDiskSize: 100
  RegionMap:
    # Centos 7 Images
    us-east-1: # N Virginia
      AMI: ami-02eac2c0129f6376b
    us-east-2: # Ohio
      AMI: ami-0f2b4fc905b0bd1f1
    us-west-1: # California
      AMI: ami-074e2d6769f445be5
    us-west-2: # Oregon
      AMI: ami-01ed306a12b7d1c96
    ca-central-1: # Québec
      AMI: ami-033e6106180a626d0
    eu-central-1: # Frankfurt
      AMI: ami-04cf43aca3e6f3de3
    eu-west-1: # Ireland
      AMI: ami-0ff760d16d9497662
    eu-west-2: # London
      AMI: ami-0eab3a90fc693af19
    ap-southeast-1: # Singapore
      AMI: ami-0b4dd9d65556cac22
    ap-southeast-2: # Sydney
      AMI: ami-08bd00d7713a39e7d
    ap-south-1 : # Mumbai
      AMI: ami-02e60be79e78fef21
    ap-northeast-1: # Tokyo
      AMI: ami-045f38c93733dd48d
    ap-northeast-2: # Seoul
      AMI: ami-06cf2a72dadf92410
    sa-east-1: # São Paulo
      AMI: ami-0b8d86d4bf91850af
  SubnetConfig:
    VPC:
      CIDR: 172.24.0.0/16
    Public:
      CIDR: 172.24.0.0/24
    Private:
      CIDR: 172.24.8.0/22
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: !FindInMap [SubnetConfig, VPC, CIDR]
      Tags:
      - Key: Name
        Value: !Join ["-", [!Ref "AWS::StackName", "net"]]
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [SubnetConfig, Public, CIDR]
      Tags:
      - Key: Name
        Value: !Join ["-", [!Ref "AWS::StackName", "public"]]
      - Key: Network
        Value: Public

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Join ["-", [!Ref "AWS::StackName", "ig"]]

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Join ["-", [!Ref "AWS::StackName", "public"]]

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  DremioSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "Dremio Access"
      GroupDescription: "Dremio Access"
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '9047'
        ToPort: '9047'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '31010'
        ToPort: '31010'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
  AvailabilityWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  AvailabilityWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: DremioMaster
    Properties:
      Handle: !Ref "AvailabilityWaitHandle"
      Timeout: "600"

  DremioMaster:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName", "DremioMaster"]]
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      KeyName: !Ref keyName
      InstanceType: !FindInMap [ClusterSize, !Ref clusterSize, coordinatorInstanceType]
      NetworkInterfaces:
        - DeleteOnTermination: "true"
          AssociatePublicIpAddress: "true"
          DeviceIndex: 0
          SubnetId: !Ref PublicSubnet
          GroupSet: [!GetAtt ["VPC", "DefaultSecurityGroup"], !Ref DremioSecurityGroup]
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !FindInMap [ClusterSize, !Ref clusterSize, coordinatorDiskSize]
            DeleteOnTermination: true
            VolumeType: gp2
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash -x
            statusFile=/tmp/statusfile

            url=${dremioDownloadURL}
            [ -z $url ] && url=${DOWNLOAD_URL}
            yum -y install wget java-1.8.0-openjdk
            wget $url -O dremio-download.rpm
            yum -y localinstall dremio-download.rpm
            if [ $? != 0 ]; then
              echo "{ \"Status\" : \"FAILURE\", \"UniqueId\" : \"${AWS::StackName}\", \"Data\" : \"Failed\", \"Reason\" : \"Unable to download Dremio\" }" > $statusFile
              curl -T $statusFile '${AvailabilityWaitHandle}'
              exit 1
            fi

            DREMIO_CONFIG_FILE=/etc/dremio/dremio.conf

            sed -i "s/executor.enabled: true/executor.enabled: false/" $DREMIO_CONFIG_FILE
            service dremio start
            chkconfig dremio on

            until curl -Iks http://localhost:9047; do
              echo waiting for website availability
              sleep 2
            done
            echo "{ \"Status\" : \"SUCCESS\", \"UniqueId\" : \"${AWS::StackName}\", \"Data\" : \"Ready\", \"Reason\" : \"Website Available\" }" > $statusFile
            curl -T $statusFile '${AvailabilityWaitHandle}'
          - DOWNLOAD_URL: !FindInMap [ Custom, Variables, "URL"]
  DremioCoordinatorLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    DependsOn: DremioMaster
    Properties:
      AssociatePublicIpAddress: true
      #EbsOptimized: true
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      InstanceMonitoring: true
      InstanceType: !FindInMap [ClusterSize, !Ref clusterSize, coordinatorInstanceType]
      KeyName: !Ref keyName
      SecurityGroups: [!GetAtt ["VPC", "DefaultSecurityGroup"], !Ref DremioSecurityGroup]
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !FindInMap [ClusterSize, !Ref clusterSize, coordinatorDiskSize]
            DeleteOnTermination: true
            VolumeType: gp2
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash -x
            url=${dremioDownloadURL}
            [ -z $url ] && url=${DOWNLOAD_URL}
            yum -y install wget java-1.8.0-openjdk
            wget $url
            yum -y localinstall $(ls dremio-*)

            DREMIO_CONFIG_FILE=/etc/dremio/dremio.conf

            sed -i "s/coordinator.master.enabled: true/coordinator.master.enabled: false/; s/executor.enabled: true/executor.enabled: false/" $DREMIO_CONFIG_FILE
            echo "zookeeper: \"${ZK}:2181\"" >> $DREMIO_CONFIG_FILE
            service dremio start
            chkconfig dremio on

          - ZK: !GetAtt DremioMaster.PrivateIp
            DOWNLOAD_URL: !FindInMap [ Custom, Variables, "URL"]
  DremioCoordinatorASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: DremioCoordinatorLC
    Properties:
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName", DremioCoordinator]]
          PropagateAtLaunch: true
          ResourceType: "auto-scaling-group"
          ResourceId: !Ref "AWS::StackName"
      LaunchConfigurationName: !Ref DremioCoordinatorLC
      VPCZoneIdentifier: [!Ref PublicSubnet]
      DesiredCapacity: !FindInMap [ClusterSize, !Ref clusterSize, coordinatorCount]
      MaxSize: !FindInMap [ClusterSize, !Ref clusterSize, coordinatorCount]
      MinSize: !FindInMap [ClusterSize, !Ref clusterSize, coordinatorCount]

  DremioExecutorLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    DependsOn: DremioMaster
    Properties:
      AssociatePublicIpAddress: true
      #EbsOptimized: true
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - !Ref AWS::Region
        - AMI
      InstanceMonitoring: true
      InstanceType: !FindInMap [ClusterSize, !Ref clusterSize, executorInstanceType]
      KeyName: !Ref keyName
      SecurityGroups: [!GetAtt ["VPC", "DefaultSecurityGroup"], !Ref DremioSecurityGroup]
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !FindInMap [ClusterSize, !Ref clusterSize, executorDiskSize]
            DeleteOnTermination: true
            VolumeType: gp2
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash -x

            url=${dremioDownloadURL}
            [ -z $url ] && url=${DOWNLOAD_URL}
            yum -y install wget java-1.8.0-openjdk
            wget $url
            yum -y localinstall $(ls dremio-*)

            DREMIO_CONFIG_FILE=/etc/dremio/dremio.conf

            sed -i "s/coordinator.master.enabled: true/coordinator.master.enabled: false/; s/coordinator.enabled: true/coordinator.enabled: false/" $DREMIO_CONFIG_FILE
            echo "zookeeper: \"${ZK}:2181\"" >> $DREMIO_CONFIG_FILE
            service dremio start
            chkconfig dremio on

          - ZK: !GetAtt DremioMaster.PrivateIp
            DOWNLOAD_URL: !FindInMap [ Custom, Variables, "URL"]
  DremioExecutorASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: DremioExecutorLC
    Properties:
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName", DremioExecutor]]
          PropagateAtLaunch: true
          ResourceType: "auto-scaling-group"
          ResourceId: !Ref "AWS::StackName"
      LaunchConfigurationName: !Ref DremioExecutorLC
      VPCZoneIdentifier: [!Ref PublicSubnet]
      DesiredCapacity: !FindInMap [ClusterSize, !Ref clusterSize, executorCount]
      MaxSize: !FindInMap [ClusterSize, !Ref clusterSize, executorCount]
      MinSize: !FindInMap [ClusterSize, !Ref clusterSize, executorCount]

Outputs:
  DremioUI:
    Description: Dremio UI.
    Value: !Join [ "", ["http://", !GetAtt DremioMaster.PublicIp, ":9047"]]
